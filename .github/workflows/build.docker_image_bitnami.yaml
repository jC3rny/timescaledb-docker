name: build & push Docker image [bitnami]


on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  schedule:
    # - cron:  "30 */12 * * *"
    - cron:  "0 6 * * *"
  workflow_dispatch:


env:
  DOCKERHUB_URL: "https://hub.docker.com/v2/repositories"
  DOCKERHUB_REPO: "jc3rny"
  DOCKERHUB_IMAGE_NAME: "timescaledb"
  GIT_LS_REMOTE_CMD: "git -c 'versionsort.suffix=-' ls-remote --refs --sort='version:refname' --tags"
  PG_REPO_URL: "https://github.com/bitnami/bitnami-docker-postgresql-repmgr.git"
  TS_RELEASE_LATEST_URL: "https://github.com/timescale/timescaledb/releases/latest"
  TS_VERSION: "2.5.2"
  TS_VERSION_CONFIG_URL: "https://raw.githubusercontent.com/timescale/timescaledb/${TS_VERSION}/version.config"


jobs:
  docker_image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        pg: [ 12, 13, 14 ]
    
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'timescale/timescaledb-docker'


      - name: Set Env
        run: |
          DOCKERHUB_PUSHED_TAGS="$(curl -sSL -X GET "${{ env.DOCKERHUB_URL }}/${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMAGE_NAME }}/tags/?page_size=100" | jq -r '.results[].name')"
          PG_DOCKER_TAG="$(${{ env.GIT_LS_REMOTE_CMD }} ${{ env.PG_REPO_URL }} | cut --delimiter='/' --fields=3 | grep -E "^${{ matrix.pg }}\." | tail --lines=1)"

          if [ -z "${{ env.TS_VERSION }}" ] || [ "${{ env.TS_VERSION }}" == "latest" ]; then
              TS_VERSION="$(curl -sS ${{ env.TS_RELEASE_LATEST_URL }} | grep -oE '[0-9]{,2}\.[0-9]{,2}\.[0-9]{,2}')"

              echo TS_VERSION=${TS_VERSION} >> $GITHUB_ENV
          else
              TS_VERSION=${{ env.TS_VERSION }}
          fi

          BUILD_IMAGE_TAG_FULL="${TS_VERSION}-pg-repmgr-$(sed 's/-debian-10-/_/' <<< ${PG_DOCKER_TAG})-bitnami"
          
          if [ -z "$(grep -E "^${BUILD_IMAGE_TAG_FULL}$" <<< ${DOCKERHUB_PUSHED_TAGS})" ]; then
              echo DOCKER_BUILD_CONTINUE="true" >> $GITHUB_ENV
          else
              echo DOCKER_BUILD_CONTINUE="false" >> $GITHUB_ENV
          fi
          
          echo PG_DOCKER_TAG=${PG_DOCKER_TAG} >> $GITHUB_ENV
          echo BUILD_IMAGE_TAG_FULL=${BUILD_IMAGE_TAG_FULL} >> $GITHUB_ENV
          echo BUILD_IMAGE_TAG_SHORT="${TS_VERSION}-pg-repmgr-$(sed 's/-debian-10-r.*//' <<< ${PG_DOCKER_TAG})-bitnami" >> $GITHUB_ENV
          echo BUILD_IMAGE_TAG_BASE="${TS_VERSION}-pg-repmgr-${{ matrix.pg }}-bitnami" >> $GITHUB_ENV
          echo PREV_TS_VERSION="$(curl -sSL ${{ env.TS_VERSION_CONFIG_URL }} | awk '$1 == "update_from_version" { print $3 }')" >> $GITHUB_ENV
          

      - name: DEBUG
        run: |
          echo "PG_DOCKER_TAG:          ${{ env.PG_DOCKER_TAG }}"
          echo "TS_VERSION:             ${{ env.TS_VERSION }}"
          echo "PREV_TS_VERSION:        ${{ env.PREV_TS_VERSION }}"
          echo "BUILD_IMAGE_TAG_FULL:   ${{ env.BUILD_IMAGE_TAG_FULL }}"
          echo "BUILD_IMAGE_TAG_SHORT:  ${{ env.BUILD_IMAGE_TAG_SHORT }}"
          echo "BUILD_IMAGE_TAG_BASE:   ${{ env.BUILD_IMAGE_TAG_BASE }}"


      - name: Update Dockerfile
        if: env.DOCKER_BUILD_CONTINUE == 'true'
        run: |
          sed -i 's/\(FROM\) bitnami\/postgresql:${PG_VERSION}/\1 bitnami\/postgresql-repmgr:${PG_VERSION}/' ./bitnami/Dockerfile
          sed -i '/^RUN sed .*(shared_preload_libraries).*$/d' ./bitnami/Dockerfile


      - name: Set up Docker Buildx
        if: env.DOCKER_BUILD_CONTINUE == 'true'
        uses: docker/setup-buildx-action@v1
      

      - name: Login to DockerHub
        if: env.DOCKER_BUILD_CONTINUE == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      

      - name: Build and push
        if: env.DOCKER_BUILD_CONTINUE == 'true'
        uses: docker/build-push-action@v2
        with:
          context: "."
          file: "./bitnami/Dockerfile"
          push: true
          build-args: |
            TS_VERSION=${{ env.TS_VERSION }}
            PG_VERSION=${{ env.PG_DOCKER_TAG }}
            PREV_IMAGE=timescale/timescaledb:${{ env.PREV_TS_VERSION }}-pg${{ matrix.pg }}-bitnami
          tags: |
            ${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMAGE_NAME }}:${{ env.BUILD_IMAGE_TAG_FULL }}
            ${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMAGE_NAME }}:${{ env.BUILD_IMAGE_TAG_SHORT }}
            ${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMAGE_NAME }}:${{ env.BUILD_IMAGE_TAG_BASE }}